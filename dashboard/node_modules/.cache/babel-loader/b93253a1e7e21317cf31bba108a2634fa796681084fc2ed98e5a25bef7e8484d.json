{"ast":null,"code":"var _jsxFileName = \"/Users/vikashsathe/Desktop/Code/Projects/Trendify/dashboard/src/components/Positions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// import { positions } from \"../data/data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Positions = () => {\n  _s();\n  const [allPositions, setAllPositions] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:3002/allPositions\").then(res => {\n      console.log(res.data);\n      setAllPositions(res.data);\n    });\n  }, []);\n\n  // const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n  const labels = allPositions.map(subArray => subArray[\"name\"]);\n\n  // const data = {\n  //   labels,\n  //   datasets: [\n  //     {\n  //       label: \"Stock Price\",\n  //       data: allPositions.map((stock) => stock.price),\n  //       backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n  //     },\n  //   ],\n  // };\n\n  const Positions = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"title\",\n        children: [\"Positions (\", allPositions.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-table\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Instrument\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Qty.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Avg.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"LTP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"P&L\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Chg.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }, this), allPositions.map((stock, index) => {\n            const curValue = stock.price * stock.qty;\n            const isProfit = curValue - stock.avg * stock.qty >= 0.0;\n            const profClass = isProfit ? \"profit\" : \"loss\";\n            const dayClass = stock.isLoss ? \"loss\" : \"profit\";\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: stock.product\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: stock.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: stock.qty\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: stock.avg.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: stock.price.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: profClass,\n                children: (curValue - stock.avg * stock.qty).toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: dayClass,\n                children: stock.day\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  };\n};\n_s(Positions, \"3UT6C6Ec+4XewU7AEBDLdg27ikI=\");\n_c = Positions;\nexport default Positions;\nvar _c;\n$RefreshReg$(_c, \"Positions\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Positions","_s","allPositions","setAllPositions","get","then","res","console","log","data","labels","map","subArray","children","className","length","fileName","_jsxFileName","lineNumber","columnNumber","stock","index","curValue","price","qty","isProfit","avg","profClass","dayClass","isLoss","product","name","toFixed","day","_c","$RefreshReg$"],"sources":["/Users/vikashsathe/Desktop/Code/Projects/Trendify/dashboard/src/components/Positions.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// import { positions } from \"../data/data\";\n\n\nconst Positions = () => {\n  const [allPositions, setAllPositions] = useState([]);\n\n  useEffect(() => {\n    axios.get(\"http://localhost:3002/allPositions\").then((res) => {\n      console.log(res.data);\n      setAllPositions(res.data);\n    });\n  }, []);\n\n  // const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n  const labels = allPositions.map((subArray) => subArray[\"name\"]);\n\n  // const data = {\n  //   labels,\n  //   datasets: [\n  //     {\n  //       label: \"Stock Price\",\n  //       data: allPositions.map((stock) => stock.price),\n  //       backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n  //     },\n  //   ],\n  // };\n\n\n\n\nconst Positions = () => {\n  return (\n    <>\n      <h3 className=\"title\">Positions ({allPositions.length})</h3>\n\n      <div className=\"order-table\">\n        <table>\n          <tr>\n            <th>Product</th>\n            <th>Instrument</th>\n            <th>Qty.</th>\n            <th>Avg.</th>\n            <th>LTP</th>\n            <th>P&L</th>\n            <th>Chg.</th>\n          </tr>\n\n          {allPositions.map((stock, index) => {\n            const curValue = stock.price * stock.qty;\n            const isProfit = curValue - stock.avg * stock.qty >= 0.0;\n            const profClass = isProfit ? \"profit\" : \"loss\";\n            const dayClass = stock.isLoss ? \"loss\" : \"profit\";\n\n            return (\n              <tr key={index}>\n                <td>{stock.product}</td>\n                <td>{stock.name}</td>\n                <td>{stock.qty}</td>\n                <td>{stock.avg.toFixed(2)}</td>\n                <td>{stock.price.toFixed(2)}</td>\n                <td className={profClass}>\n                  {(curValue - stock.avg * stock.qty).toFixed(2)}\n                </td>\n                <td className={dayClass}>{stock.day}</td>\n              </tr>\n            );\n          })}\n        </table>\n      </div>\n    </>\n  );\n};\n}\n\nexport default Positions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}